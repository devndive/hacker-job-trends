{"by":"xitrium","id":16283756,"parent":16282819,"text":"Stan (mc-stan.org, Columbia University) | New York City | Full-time, ONSITE | $80-$100k<p>Stan (<a href=\"http:&#x2F;&#x2F;mc-stan.org\" rel=\"nofollow\">http:&#x2F;&#x2F;mc-stan.org</a>) is an open source probabilistic programming language and Bayesian inference toolkit that data scientists and applied statisticians across the world and many fields use to specify statistical models and fit them to data. Stan emerged from the research group under Andrew Gelman at Columbia, which is focused on state-of-the-art in Bayesian inference methodology and consulted on a variety of statistical problems in the social, biological, and physical sciences, engineering, sports, and business. Since its initial release, we’ve welcomed collaborators and contributors across the globe and have about 30 active contributors at the time of writing.<p>We’re looking for a tools and infrastructure developer who is interested in science and open source, is a self-starter and intrinsically motivated to help out, wants a flexible lifestyle, and would like to learn Bayesian stats and data analysis. Ideally you’d come in knowing a decent amount about either systems administration or programming (or both) and we would teach you about statistics. We’re looking for help with the following problems initially:\n* Streamlining installation for our R and Python interfaces for scientists on Windows and Mac, perhaps creating installers for each platform\n* Maintaining and improving our continuous integration infrastructure (currently Jenkins, Travis, AWS)\n* Bringing the PyStan interface up to feature parity with RStan and improving both of them (Python)\n* Higher order autodiff test framework and infrastructure (C++)<p>We expect that you will need to spend a significant portion of your time on at least some of these problems at first. Beyond that, there is much work to be done on Stan as an ecosystem. For example, we could also use help with the following key underserved areas of the project:\n* Profiling and performance benchmarks and improvements\n* Various refactorings, mostly in C++ \n* Pedagogical materials\n* GPU and distributed computation support<p>There are also many other ways to improve Stan that could use helping hands:\n* Stan 3.0 language and&#x2F;or compiler rewrite\n* CloudStan\n* Graphical modeling language transpiler\n* New algorithm research implementations\n* Anything from the list here: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;stan-dev&#x2F;stan&#x2F;wiki&#x2F;Longer-Term-To-Do-List\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;stan-dev&#x2F;stan&#x2F;wiki&#x2F;Longer-Term-To-Do-List</a><p>Links to some Stan team outputs and other Stan-related resources:\n<a href=\"https:&#x2F;&#x2F;github.com&#x2F;stan-dev\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;stan-dev</a>\nandrewgelman.com\n<a href=\"http:&#x2F;&#x2F;mc-stan.org&#x2F;users&#x2F;documentation&#x2F;\" rel=\"nofollow\">http:&#x2F;&#x2F;mc-stan.org&#x2F;users&#x2F;documentation&#x2F;</a>\n<a href=\"https:&#x2F;&#x2F;github.com&#x2F;stan-dev&#x2F;stancon_talks\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;stan-dev&#x2F;stancon_talks</a>\ngreat intro Bayesian analysis book: <a href=\"http:&#x2F;&#x2F;xcelab.net&#x2F;rm&#x2F;statistical-rethinking&#x2F;\" rel=\"nofollow\">http:&#x2F;&#x2F;xcelab.net&#x2F;rm&#x2F;statistical-rethinking&#x2F;</a><p>To apply, email Sean Talts, contact info here: mc-stan.org&#x2F;about&#x2F;team&#x2F;","time":1517506242,"type":"comment"}